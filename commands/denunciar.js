const { SlashCommandBuilder, PermissionFlagsBits, EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');
const db = require('../database/db.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('denunciar')
        .setDescription('Comandos do sistema de den√∫ncias da Corregedoria.')
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator)
        .addSubcommand(subcommand =>
            subcommand
                .setName('painel')
                .setDescription('Envia o painel para abertura de den√∫ncias no canal configurado.')
        ),

    async execute(interaction) {
        if (interaction.options.getSubcommand() === 'painel') {
            await interaction.deferReply({ ephemeral: true });

            try {
                const publicChannelId = (await db.get("SELECT value FROM settings WHERE key = 'corregedoria_public_channel_id'"))?.value;
                if (!publicChannelId) {
                    return await interaction.editReply('‚ùå O canal p√∫blico de den√∫ncias n√£o foi configurado. Use `/setup` para configur√°-lo.');
                }

                const targetChannel = await interaction.guild.channels.fetch(publicChannelId).catch(() => null);
                if (!targetChannel) {
                    return await interaction.editReply('‚ùå O canal de den√∫ncias configurado n√£o foi encontrado ou n√£o existe mais.');
                }

                const embed = new EmbedBuilder()
                    .setColor('DarkRed')
                    .setTitle('‚öñÔ∏è Canal de Den√∫ncias da Corregedoria')
                    .setDescription(
                        'Este √© o canal oficial para registrar den√∫ncias, reclama√ß√µes ou reportar condutas inadequadas de forma segura e confidencial.\n\n' +
                        'Para iniciar, clique no bot√£o **"Abrir Den√∫ncia"** abaixo. Um formul√°rio privado ser√° aberto para que voc√™ possa detalhar sua ocorr√™ncia.'
                    )
                    .addFields({
                        name: 'Confidencialidade Garantida',
                        value: 'A sua identidade ser√° mantida em sigilo e a den√∫ncia ser√° encaminhada diretamente aos membros da Corregedoria para uma investiga√ß√£o imparcial.'
                    })
                    .setThumbnail('https://i.imgur.com/sR32sQ8.png') // √çcone de balan√ßa
                    .setFooter({ text: 'A integridade da corpora√ß√£o depende da sua colabora√ß√£o.' });

                const row = new ActionRowBuilder().addComponents(
                    new ButtonBuilder()
                        .setCustomId('corregedoria_open_ticket')
                        .setLabel('Abrir Den√∫ncia')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üö®')
                );

                await targetChannel.send({ embeds: [embed], components: [row] });
                await interaction.editReply(`‚úÖ Painel de den√∫ncias implantado com sucesso no canal ${targetChannel}.`);

            } catch (error) {
                console.error("Erro ao implantar painel de den√∫ncias:", error);
                await interaction.editReply('‚ùå Ocorreu um erro ao tentar implantar o painel. Verifique as permiss√µes do bot no canal de destino.');
            }
        }
    },
};